// Class automatically generated by Dev-C++ New Class wizard

#ifndef SCENEOBJECT_H
#define SCENEOBJECT_H

#include <algorithm>
#include "glapi.h"

// No description
class SceneObject : public IDisposable, public IUpdatable
{
    protected:
        // Comparator for Depth
        static bool SOComparator(const SceneObject* s1, const SceneObject* s2) {
            return s1->depth < s2->depth;
        }
    
    private:
        // Monotone increasing Object ID counter
        static uint counter;
        
    protected:
        // GL API
        static GLAPIClass& gl;
        
    public:
        // SceneObject Properties
        const uint id;
        bool enabled;
        bool tickUpdate;
        Transformation transformation;
        ullong tick;
        string alias;   // Optional. Internally no use.
    
    protected:
        // Object Hierarchy
        SceneObject* parent;
        vector<SceneObject*> children;
        int depth;
        
	public:
        SceneObject() : id(counter++), enabled(true), tickUpdate(true), transformation(), depth(0), parent(NULL) { }
        virtual ~SceneObject() { Dispose(); }
        
        // Object Hierarchy Function
        inline SceneObject* GetParent() { return parent; }
        inline vector<SceneObject*>& GetChildrenVector() { return children; }
        void SetParent(SceneObject* parent);
        void RemoveChild(SceneObject* target);
        void SetDepth(int depth);
        inline int GetDepth() const { return depth; }
        
        // Animated Texture for Standard Draw Call
        virtual void Draw();
        
        // Standard Update Functions
        void InternalOnBegin();
		void InternalOnEnd();
        void InternalOnFixedLoading();
		void InternalOnFixedUpdate();
		void InternalOnFixedClosing();
        void InternalOnLoading();
		void InternalOnUpdate();
		void InternalOnClosing();
        
        // IDisposable
        virtual void Dispose();
        
		
};

#endif // SCENEOBJECT_H
